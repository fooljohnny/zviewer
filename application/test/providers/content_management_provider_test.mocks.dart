// Mocks generated by Mockito 5.4.6 from annotations
// in zviewer/test/providers/content_management_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i9;

import 'package:mockito/mockito.dart' as _i1;
import 'package:zviewer/models/admin_action.dart' as _i7;
import 'package:zviewer/models/album.dart' as _i5;
import 'package:zviewer/models/content_category.dart' as _i4;
import 'package:zviewer/models/content_item.dart' as _i3;
import 'package:zviewer/providers/auth_provider.dart' as _i8;
import 'package:zviewer/services/content_management_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeUploadResponse_0 extends _i1.SmartFake
    implements _i2.UploadResponse {
  _FakeUploadResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeContentListResponse_1 extends _i1.SmartFake
    implements _i2.ContentListResponse {
  _FakeContentListResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeContentItem_2 extends _i1.SmartFake implements _i3.ContentItem {
  _FakeContentItem_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeContentActionResponse_3 extends _i1.SmartFake
    implements _i2.ContentActionResponse {
  _FakeContentActionResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBulkActionResponse_4 extends _i1.SmartFake
    implements _i2.BulkActionResponse {
  _FakeBulkActionResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeContentCategory_5 extends _i1.SmartFake
    implements _i4.ContentCategory {
  _FakeContentCategory_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAlbumActionResponse_6 extends _i1.SmartFake
    implements _i5.AlbumActionResponse {
  _FakeAlbumActionResponse_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAlbumListResponse_7 extends _i1.SmartFake
    implements _i5.AlbumListResponse {
  _FakeAlbumListResponse_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ContentManagementService].
///
/// See the documentation for Mockito's code generation for more information.
class MockContentManagementService extends _i1.Mock
    implements _i2.ContentManagementService {
  MockContentManagementService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.UploadResponse> uploadFiles(List<_i2.UploadFile>? files) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadFiles,
          [files],
        ),
        returnValue: _i6.Future<_i2.UploadResponse>.value(_FakeUploadResponse_0(
          this,
          Invocation.method(
            #uploadFiles,
            [files],
          ),
        )),
      ) as _i6.Future<_i2.UploadResponse>);

  @override
  _i6.Future<_i2.ContentListResponse> getContent({
    int? page = 1,
    int? limit = 20,
    _i3.ContentStatus? status,
    _i3.ContentType? type,
    String? searchQuery,
    String? userFilter,
    DateTime? startDate,
    DateTime? endDate,
    List<String>? categories,
    String? sortBy = 'uploadedAt',
    String? sortOrder = 'desc',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContent,
          [],
          {
            #page: page,
            #limit: limit,
            #status: status,
            #type: type,
            #searchQuery: searchQuery,
            #userFilter: userFilter,
            #startDate: startDate,
            #endDate: endDate,
            #categories: categories,
            #sortBy: sortBy,
            #sortOrder: sortOrder,
          },
        ),
        returnValue: _i6.Future<_i2.ContentListResponse>.value(
            _FakeContentListResponse_1(
          this,
          Invocation.method(
            #getContent,
            [],
            {
              #page: page,
              #limit: limit,
              #status: status,
              #type: type,
              #searchQuery: searchQuery,
              #userFilter: userFilter,
              #startDate: startDate,
              #endDate: endDate,
              #categories: categories,
              #sortBy: sortBy,
              #sortOrder: sortOrder,
            },
          ),
        )),
      ) as _i6.Future<_i2.ContentListResponse>);

  @override
  _i6.Future<_i2.ContentListResponse> getContentList({
    int? page = 1,
    int? limit = 20,
    _i3.ContentStatus? status,
    _i3.ContentType? type,
    String? search,
    String? userId,
    List<String>? categories,
    String? sortBy = 'uploadedAt',
    String? sortOrder = 'desc',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContentList,
          [],
          {
            #page: page,
            #limit: limit,
            #status: status,
            #type: type,
            #search: search,
            #userId: userId,
            #categories: categories,
            #sortBy: sortBy,
            #sortOrder: sortOrder,
          },
        ),
        returnValue: _i6.Future<_i2.ContentListResponse>.value(
            _FakeContentListResponse_1(
          this,
          Invocation.method(
            #getContentList,
            [],
            {
              #page: page,
              #limit: limit,
              #status: status,
              #type: type,
              #search: search,
              #userId: userId,
              #categories: categories,
              #sortBy: sortBy,
              #sortOrder: sortOrder,
            },
          ),
        )),
      ) as _i6.Future<_i2.ContentListResponse>);

  @override
  _i6.Future<_i3.ContentItem> getContentItem(String? contentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContentItem,
          [contentId],
        ),
        returnValue: _i6.Future<_i3.ContentItem>.value(_FakeContentItem_2(
          this,
          Invocation.method(
            #getContentItem,
            [contentId],
          ),
        )),
      ) as _i6.Future<_i3.ContentItem>);

  @override
  _i6.Future<_i2.ContentActionResponse> approveContent(String? contentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #approveContent,
          [contentId],
        ),
        returnValue: _i6.Future<_i2.ContentActionResponse>.value(
            _FakeContentActionResponse_3(
          this,
          Invocation.method(
            #approveContent,
            [contentId],
          ),
        )),
      ) as _i6.Future<_i2.ContentActionResponse>);

  @override
  _i6.Future<_i2.ContentActionResponse> rejectContent(
    String? contentId,
    String? reason,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #rejectContent,
          [
            contentId,
            reason,
          ],
        ),
        returnValue: _i6.Future<_i2.ContentActionResponse>.value(
            _FakeContentActionResponse_3(
          this,
          Invocation.method(
            #rejectContent,
            [
              contentId,
              reason,
            ],
          ),
        )),
      ) as _i6.Future<_i2.ContentActionResponse>);

  @override
  _i6.Future<_i2.ContentActionResponse> deleteContent(
    String? contentId,
    String? reason,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteContent,
          [
            contentId,
            reason,
          ],
        ),
        returnValue: _i6.Future<_i2.ContentActionResponse>.value(
            _FakeContentActionResponse_3(
          this,
          Invocation.method(
            #deleteContent,
            [
              contentId,
              reason,
            ],
          ),
        )),
      ) as _i6.Future<_i2.ContentActionResponse>);

  @override
  _i6.Future<_i2.ContentActionResponse> categorizeContent(
    String? contentId,
    List<String>? categories,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #categorizeContent,
          [
            contentId,
            categories,
          ],
        ),
        returnValue: _i6.Future<_i2.ContentActionResponse>.value(
            _FakeContentActionResponse_3(
          this,
          Invocation.method(
            #categorizeContent,
            [
              contentId,
              categories,
            ],
          ),
        )),
      ) as _i6.Future<_i2.ContentActionResponse>);

  @override
  _i6.Future<_i2.BulkActionResponse> bulkAction(
    String? action,
    List<String>? contentIds, {
    Map<String, dynamic>? metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #bulkAction,
          [
            action,
            contentIds,
          ],
          {#metadata: metadata},
        ),
        returnValue:
            _i6.Future<_i2.BulkActionResponse>.value(_FakeBulkActionResponse_4(
          this,
          Invocation.method(
            #bulkAction,
            [
              action,
              contentIds,
            ],
            {#metadata: metadata},
          ),
        )),
      ) as _i6.Future<_i2.BulkActionResponse>);

  @override
  _i6.Future<List<_i4.ContentCategory>> getCategories() => (super.noSuchMethod(
        Invocation.method(
          #getCategories,
          [],
        ),
        returnValue: _i6.Future<List<_i4.ContentCategory>>.value(
            <_i4.ContentCategory>[]),
      ) as _i6.Future<List<_i4.ContentCategory>>);

  @override
  _i6.Future<_i4.ContentCategory> createCategory(
          _i4.ContentCategory? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #createCategory,
          [category],
        ),
        returnValue:
            _i6.Future<_i4.ContentCategory>.value(_FakeContentCategory_5(
          this,
          Invocation.method(
            #createCategory,
            [category],
          ),
        )),
      ) as _i6.Future<_i4.ContentCategory>);

  @override
  _i6.Future<_i4.ContentCategory> updateCategory(
          _i4.ContentCategory? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCategory,
          [category],
        ),
        returnValue:
            _i6.Future<_i4.ContentCategory>.value(_FakeContentCategory_5(
          this,
          Invocation.method(
            #updateCategory,
            [category],
          ),
        )),
      ) as _i6.Future<_i4.ContentCategory>);

  @override
  _i6.Future<bool> deleteCategory(String? categoryId) => (super.noSuchMethod(
        Invocation.method(
          #deleteCategory,
          [categoryId],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<List<_i7.AdminAction>> getContentAdminActions(String? contentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getContentAdminActions,
          [contentId],
        ),
        returnValue:
            _i6.Future<List<_i7.AdminAction>>.value(<_i7.AdminAction>[]),
      ) as _i6.Future<List<_i7.AdminAction>>);

  @override
  _i6.Future<List<_i7.AdminAction>> getRecentAdminActions({
    int? limit = 50,
    String? adminId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecentAdminActions,
          [],
          {
            #limit: limit,
            #adminId: adminId,
          },
        ),
        returnValue:
            _i6.Future<List<_i7.AdminAction>>.value(<_i7.AdminAction>[]),
      ) as _i6.Future<List<_i7.AdminAction>>);

  @override
  _i6.Future<_i5.AlbumActionResponse> createAlbum(
          _i5.CreateAlbumRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAlbum,
          [request],
        ),
        returnValue: _i6.Future<_i5.AlbumActionResponse>.value(
            _FakeAlbumActionResponse_6(
          this,
          Invocation.method(
            #createAlbum,
            [request],
          ),
        )),
      ) as _i6.Future<_i5.AlbumActionResponse>);

  @override
  _i6.Future<_i5.AlbumActionResponse> getAlbum(String? albumId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAlbum,
          [albumId],
        ),
        returnValue: _i6.Future<_i5.AlbumActionResponse>.value(
            _FakeAlbumActionResponse_6(
          this,
          Invocation.method(
            #getAlbum,
            [albumId],
          ),
        )),
      ) as _i6.Future<_i5.AlbumActionResponse>);

  @override
  _i6.Future<_i5.AlbumListResponse> getAlbums({
    int? page = 1,
    int? limit = 20,
    String? userId,
    bool? publicOnly = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAlbums,
          [],
          {
            #page: page,
            #limit: limit,
            #userId: userId,
            #publicOnly: publicOnly,
          },
        ),
        returnValue:
            _i6.Future<_i5.AlbumListResponse>.value(_FakeAlbumListResponse_7(
          this,
          Invocation.method(
            #getAlbums,
            [],
            {
              #page: page,
              #limit: limit,
              #userId: userId,
              #publicOnly: publicOnly,
            },
          ),
        )),
      ) as _i6.Future<_i5.AlbumListResponse>);

  @override
  _i6.Future<_i5.AlbumActionResponse> updateAlbum(
    String? albumId,
    _i5.UpdateAlbumRequest? request,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAlbum,
          [
            albumId,
            request,
          ],
        ),
        returnValue: _i6.Future<_i5.AlbumActionResponse>.value(
            _FakeAlbumActionResponse_6(
          this,
          Invocation.method(
            #updateAlbum,
            [
              albumId,
              request,
            ],
          ),
        )),
      ) as _i6.Future<_i5.AlbumActionResponse>);

  @override
  _i6.Future<_i5.AlbumActionResponse> deleteAlbum(String? albumId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAlbum,
          [albumId],
        ),
        returnValue: _i6.Future<_i5.AlbumActionResponse>.value(
            _FakeAlbumActionResponse_6(
          this,
          Invocation.method(
            #deleteAlbum,
            [albumId],
          ),
        )),
      ) as _i6.Future<_i5.AlbumActionResponse>);

  @override
  _i6.Future<_i5.AlbumActionResponse> addImagesToAlbum(
    String? albumId,
    _i5.AddImageToAlbumRequest? request,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addImagesToAlbum,
          [
            albumId,
            request,
          ],
        ),
        returnValue: _i6.Future<_i5.AlbumActionResponse>.value(
            _FakeAlbumActionResponse_6(
          this,
          Invocation.method(
            #addImagesToAlbum,
            [
              albumId,
              request,
            ],
          ),
        )),
      ) as _i6.Future<_i5.AlbumActionResponse>);

  @override
  _i6.Future<_i5.AlbumActionResponse> removeImagesFromAlbum(
    String? albumId,
    _i5.RemoveImageFromAlbumRequest? request,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeImagesFromAlbum,
          [
            albumId,
            request,
          ],
        ),
        returnValue: _i6.Future<_i5.AlbumActionResponse>.value(
            _FakeAlbumActionResponse_6(
          this,
          Invocation.method(
            #removeImagesFromAlbum,
            [
              albumId,
              request,
            ],
          ),
        )),
      ) as _i6.Future<_i5.AlbumActionResponse>);

  @override
  _i6.Future<_i5.AlbumActionResponse> setAlbumCover(
    String? albumId,
    _i5.SetAlbumCoverRequest? request,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAlbumCover,
          [
            albumId,
            request,
          ],
        ),
        returnValue: _i6.Future<_i5.AlbumActionResponse>.value(
            _FakeAlbumActionResponse_6(
          this,
          Invocation.method(
            #setAlbumCover,
            [
              albumId,
              request,
            ],
          ),
        )),
      ) as _i6.Future<_i5.AlbumActionResponse>);

  @override
  _i6.Future<_i5.AlbumListResponse> searchAlbums({
    required String? query,
    int? page = 1,
    int? limit = 20,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchAlbums,
          [],
          {
            #query: query,
            #page: page,
            #limit: limit,
          },
        ),
        returnValue:
            _i6.Future<_i5.AlbumListResponse>.value(_FakeAlbumListResponse_7(
          this,
          Invocation.method(
            #searchAlbums,
            [],
            {
              #query: query,
              #page: page,
              #limit: limit,
            },
          ),
        )),
      ) as _i6.Future<_i5.AlbumListResponse>);
}

/// A class which mocks [AuthProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthProvider extends _i1.Mock implements _i8.AuthProvider {
  MockAuthProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get isAuthenticated => (super.noSuchMethod(
        Invocation.getter(#isAuthenticated),
        returnValue: false,
      ) as bool);

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isAdmin => (super.noSuchMethod(
        Invocation.getter(#isAdmin),
        returnValue: false,
      ) as bool);

  @override
  bool get isModerator => (super.noSuchMethod(
        Invocation.getter(#isModerator),
        returnValue: false,
      ) as bool);

  @override
  _i6.Future<String?> get token => (super.noSuchMethod(
        Invocation.getter(#token),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i6.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<bool> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> register(
    String? email,
    String? password,
    String? confirmPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [
            email,
            password,
            confirmPassword,
          ],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> refreshUser() => (super.noSuchMethod(
        Invocation.method(
          #refreshUser,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void clearError() => super.noSuchMethod(
        Invocation.method(
          #clearError,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
