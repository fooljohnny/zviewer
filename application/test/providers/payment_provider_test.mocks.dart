// Mocks generated by Mockito 5.4.6 from annotations
// in zviewer/test/providers/payment_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:zviewer/models/payment.dart' as _i2;
import 'package:zviewer/models/payment_method.dart' as _i3;
import 'package:zviewer/models/subscription.dart' as _i4;
import 'package:zviewer/services/payment_service.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakePayment_0 extends _i1.SmartFake implements _i2.Payment {
  _FakePayment_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePaymentMethod_1 extends _i1.SmartFake implements _i3.PaymentMethod {
  _FakePaymentMethod_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSubscription_2 extends _i1.SmartFake implements _i4.Subscription {
  _FakeSubscription_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PaymentService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaymentService extends _i1.Mock implements _i5.PaymentService {
  MockPaymentService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Payment> processPayment({
    required double? amount,
    required String? currency,
    required String? paymentMethodId,
    String? description,
    _i2.PaymentType? type = _i2.PaymentType.oneTime,
    String? subscriptionId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #processPayment,
          [],
          {
            #amount: amount,
            #currency: currency,
            #paymentMethodId: paymentMethodId,
            #description: description,
            #type: type,
            #subscriptionId: subscriptionId,
          },
        ),
        returnValue: _i6.Future<_i2.Payment>.value(_FakePayment_0(
          this,
          Invocation.method(
            #processPayment,
            [],
            {
              #amount: amount,
              #currency: currency,
              #paymentMethodId: paymentMethodId,
              #description: description,
              #type: type,
              #subscriptionId: subscriptionId,
            },
          ),
        )),
      ) as _i6.Future<_i2.Payment>);

  @override
  _i6.Future<List<_i2.Payment>> getPaymentHistory({
    int? page = 1,
    int? limit = 20,
    _i2.PaymentStatus? status,
    _i2.PaymentType? type,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaymentHistory,
          [],
          {
            #page: page,
            #limit: limit,
            #status: status,
            #type: type,
          },
        ),
        returnValue: _i6.Future<List<_i2.Payment>>.value(<_i2.Payment>[]),
      ) as _i6.Future<List<_i2.Payment>>);

  @override
  _i6.Future<_i2.Payment> getPayment(String? paymentId) => (super.noSuchMethod(
        Invocation.method(
          #getPayment,
          [paymentId],
        ),
        returnValue: _i6.Future<_i2.Payment>.value(_FakePayment_0(
          this,
          Invocation.method(
            #getPayment,
            [paymentId],
          ),
        )),
      ) as _i6.Future<_i2.Payment>);

  @override
  _i6.Future<List<_i3.PaymentMethod>> getPaymentMethods() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaymentMethods,
          [],
        ),
        returnValue:
            _i6.Future<List<_i3.PaymentMethod>>.value(<_i3.PaymentMethod>[]),
      ) as _i6.Future<List<_i3.PaymentMethod>>);

  @override
  _i6.Future<_i3.PaymentMethod> savePaymentMethod({
    required _i3.PaymentMethodType? type,
    required String? last4,
    String? brand,
    String? expiryMonth,
    String? expiryYear,
    String? holderName,
    bool? isDefault = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #savePaymentMethod,
          [],
          {
            #type: type,
            #last4: last4,
            #brand: brand,
            #expiryMonth: expiryMonth,
            #expiryYear: expiryYear,
            #holderName: holderName,
            #isDefault: isDefault,
          },
        ),
        returnValue: _i6.Future<_i3.PaymentMethod>.value(_FakePaymentMethod_1(
          this,
          Invocation.method(
            #savePaymentMethod,
            [],
            {
              #type: type,
              #last4: last4,
              #brand: brand,
              #expiryMonth: expiryMonth,
              #expiryYear: expiryYear,
              #holderName: holderName,
              #isDefault: isDefault,
            },
          ),
        )),
      ) as _i6.Future<_i3.PaymentMethod>);

  @override
  _i6.Future<void> deletePaymentMethod(String? paymentMethodId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deletePaymentMethod,
          [paymentMethodId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<_i4.SubscriptionPlan>> getSubscriptionPlans() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSubscriptionPlans,
          [],
        ),
        returnValue: _i6.Future<List<_i4.SubscriptionPlan>>.value(
            <_i4.SubscriptionPlan>[]),
      ) as _i6.Future<List<_i4.SubscriptionPlan>>);

  @override
  _i6.Future<_i4.Subscription> createSubscription({
    required String? planId,
    required String? paymentMethodId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSubscription,
          [],
          {
            #planId: planId,
            #paymentMethodId: paymentMethodId,
          },
        ),
        returnValue: _i6.Future<_i4.Subscription>.value(_FakeSubscription_2(
          this,
          Invocation.method(
            #createSubscription,
            [],
            {
              #planId: planId,
              #paymentMethodId: paymentMethodId,
            },
          ),
        )),
      ) as _i6.Future<_i4.Subscription>);

  @override
  _i6.Future<List<_i4.Subscription>> getSubscriptions() => (super.noSuchMethod(
        Invocation.method(
          #getSubscriptions,
          [],
        ),
        returnValue:
            _i6.Future<List<_i4.Subscription>>.value(<_i4.Subscription>[]),
      ) as _i6.Future<List<_i4.Subscription>>);

  @override
  _i6.Future<_i4.Subscription> cancelSubscription({
    required String? subscriptionId,
    String? reason,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #cancelSubscription,
          [],
          {
            #subscriptionId: subscriptionId,
            #reason: reason,
          },
        ),
        returnValue: _i6.Future<_i4.Subscription>.value(_FakeSubscription_2(
          this,
          Invocation.method(
            #cancelSubscription,
            [],
            {
              #subscriptionId: subscriptionId,
              #reason: reason,
            },
          ),
        )),
      ) as _i6.Future<_i4.Subscription>);

  @override
  _i6.Future<bool> isPaymentGatewayAvailable() => (super.noSuchMethod(
        Invocation.method(
          #isPaymentGatewayAvailable,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<Map<String, dynamic>> getPaymentGatewayConfig() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaymentGatewayConfig,
          [],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);
}
