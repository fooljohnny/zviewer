// Mocks generated by Mockito 5.4.6 from annotations
// in zviewer/test/widgets/payments/payment_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i7;

import 'package:mockito/mockito.dart' as _i1;
import 'package:zviewer/models/payment.dart' as _i3;
import 'package:zviewer/models/payment_method.dart' as _i4;
import 'package:zviewer/models/subscription.dart' as _i5;
import 'package:zviewer/providers/auth_provider.dart' as _i8;
import 'package:zviewer/providers/payment_provider.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [PaymentProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaymentProvider extends _i1.Mock implements _i2.PaymentProvider {
  MockPaymentProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  List<_i3.Payment> get payments => (super.noSuchMethod(
        Invocation.getter(#payments),
        returnValue: <_i3.Payment>[],
      ) as List<_i3.Payment>);

  @override
  List<_i4.PaymentMethod> get paymentMethods => (super.noSuchMethod(
        Invocation.getter(#paymentMethods),
        returnValue: <_i4.PaymentMethod>[],
      ) as List<_i4.PaymentMethod>);

  @override
  List<_i5.Subscription> get subscriptions => (super.noSuchMethod(
        Invocation.getter(#subscriptions),
        returnValue: <_i5.Subscription>[],
      ) as List<_i5.Subscription>);

  @override
  List<_i5.SubscriptionPlan> get subscriptionPlans => (super.noSuchMethod(
        Invocation.getter(#subscriptionPlans),
        returnValue: <_i5.SubscriptionPlan>[],
      ) as List<_i5.SubscriptionPlan>);

  @override
  bool get isPaymentGatewayAvailable => (super.noSuchMethod(
        Invocation.getter(#isPaymentGatewayAvailable),
        returnValue: false,
      ) as bool);

  @override
  List<_i4.PaymentMethod> get defaultPaymentMethods => (super.noSuchMethod(
        Invocation.getter(#defaultPaymentMethods),
        returnValue: <_i4.PaymentMethod>[],
      ) as List<_i4.PaymentMethod>);

  @override
  List<_i4.PaymentMethod> get cardPaymentMethods => (super.noSuchMethod(
        Invocation.getter(#cardPaymentMethods),
        returnValue: <_i4.PaymentMethod>[],
      ) as List<_i4.PaymentMethod>);

  @override
  List<_i4.PaymentMethod> get nonExpiredPaymentMethods => (super.noSuchMethod(
        Invocation.getter(#nonExpiredPaymentMethods),
        returnValue: <_i4.PaymentMethod>[],
      ) as List<_i4.PaymentMethod>);

  @override
  List<_i5.Subscription> get activeSubscriptions => (super.noSuchMethod(
        Invocation.getter(#activeSubscriptions),
        returnValue: <_i5.Subscription>[],
      ) as List<_i5.Subscription>);

  @override
  List<_i5.Subscription> get expiredSubscriptions => (super.noSuchMethod(
        Invocation.getter(#expiredSubscriptions),
        returnValue: <_i5.Subscription>[],
      ) as List<_i5.Subscription>);

  @override
  List<_i3.Payment> get completedPayments => (super.noSuchMethod(
        Invocation.getter(#completedPayments),
        returnValue: <_i3.Payment>[],
      ) as List<_i3.Payment>);

  @override
  List<_i3.Payment> get failedPayments => (super.noSuchMethod(
        Invocation.getter(#failedPayments),
        returnValue: <_i3.Payment>[],
      ) as List<_i3.Payment>);

  @override
  double get totalSpent => (super.noSuchMethod(
        Invocation.getter(#totalSpent),
        returnValue: 0.0,
      ) as double);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void clearError() => super.noSuchMethod(
        Invocation.method(
          #clearError,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> loadPaymentHistory({
    int? page = 1,
    int? limit = 20,
    _i3.PaymentStatus? status,
    _i3.PaymentType? type,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadPaymentHistory,
          [],
          {
            #page: page,
            #limit: limit,
            #status: status,
            #type: type,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> refreshPaymentHistory() => (super.noSuchMethod(
        Invocation.method(
          #refreshPaymentHistory,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i3.Payment?> processPayment({
    required double? amount,
    required String? currency,
    required String? paymentMethodId,
    String? description,
    _i3.PaymentType? type = _i3.PaymentType.oneTime,
    String? subscriptionId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #processPayment,
          [],
          {
            #amount: amount,
            #currency: currency,
            #paymentMethodId: paymentMethodId,
            #description: description,
            #type: type,
            #subscriptionId: subscriptionId,
          },
        ),
        returnValue: _i6.Future<_i3.Payment?>.value(),
      ) as _i6.Future<_i3.Payment?>);

  @override
  _i6.Future<_i3.Payment?> getPayment(String? paymentId) => (super.noSuchMethod(
        Invocation.method(
          #getPayment,
          [paymentId],
        ),
        returnValue: _i6.Future<_i3.Payment?>.value(),
      ) as _i6.Future<_i3.Payment?>);

  @override
  _i6.Future<void> loadPaymentMethods() => (super.noSuchMethod(
        Invocation.method(
          #loadPaymentMethods,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i4.PaymentMethod?> savePaymentMethod({
    required _i4.PaymentMethodType? type,
    required String? last4,
    String? brand,
    String? expiryMonth,
    String? expiryYear,
    String? holderName,
    bool? isDefault = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #savePaymentMethod,
          [],
          {
            #type: type,
            #last4: last4,
            #brand: brand,
            #expiryMonth: expiryMonth,
            #expiryYear: expiryYear,
            #holderName: holderName,
            #isDefault: isDefault,
          },
        ),
        returnValue: _i6.Future<_i4.PaymentMethod?>.value(),
      ) as _i6.Future<_i4.PaymentMethod?>);

  @override
  _i6.Future<bool> deletePaymentMethod(String? paymentMethodId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deletePaymentMethod,
          [paymentMethodId],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<void> loadSubscriptionPlans() => (super.noSuchMethod(
        Invocation.method(
          #loadSubscriptionPlans,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> loadSubscriptions() => (super.noSuchMethod(
        Invocation.method(
          #loadSubscriptions,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i5.Subscription?> createSubscription({
    required String? planId,
    required String? paymentMethodId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSubscription,
          [],
          {
            #planId: planId,
            #paymentMethodId: paymentMethodId,
          },
        ),
        returnValue: _i6.Future<_i5.Subscription?>.value(),
      ) as _i6.Future<_i5.Subscription?>);

  @override
  _i6.Future<_i5.Subscription?> cancelSubscription({
    required String? subscriptionId,
    String? reason,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #cancelSubscription,
          [],
          {
            #subscriptionId: subscriptionId,
            #reason: reason,
          },
        ),
        returnValue: _i6.Future<_i5.Subscription?>.value(),
      ) as _i6.Future<_i5.Subscription?>);

  @override
  _i6.Future<void> checkPaymentGatewayAvailability() => (super.noSuchMethod(
        Invocation.method(
          #checkPaymentGatewayAvailability,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<Map<String, dynamic>?> getPaymentGatewayConfig() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaymentGatewayConfig,
          [],
        ),
        returnValue: _i6.Future<Map<String, dynamic>?>.value(),
      ) as _i6.Future<Map<String, dynamic>?>);

  @override
  void reset() => super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AuthProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthProvider extends _i1.Mock implements _i8.AuthProvider {
  MockAuthProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get isAuthenticated => (super.noSuchMethod(
        Invocation.getter(#isAuthenticated),
        returnValue: false,
      ) as bool);

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isAdmin => (super.noSuchMethod(
        Invocation.getter(#isAdmin),
        returnValue: false,
      ) as bool);

  @override
  bool get isModerator => (super.noSuchMethod(
        Invocation.getter(#isModerator),
        returnValue: false,
      ) as bool);

  @override
  _i6.Future<String?> get token => (super.noSuchMethod(
        Invocation.getter(#token),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i6.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<bool> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> register(
    String? email,
    String? password,
    String? confirmPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [
            email,
            password,
            confirmPassword,
          ],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> refreshUser() => (super.noSuchMethod(
        Invocation.method(
          #refreshUser,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void clearError() => super.noSuchMethod(
        Invocation.method(
          #clearError,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
